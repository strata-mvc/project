<?php

class Ithemes_Sync_Verb_ITSEC_Get_File_List extends Ithemes_Sync_Verb {

	public static $name = 'itsec-get-file-list';
	public static $description = '';

	public $default_arguments = array();

	public function run( $arguments ) {

		$contents = array();

		$contents = $this->get_files();

		return $contents;

	}

	/**
	 * Returns directory contents
	 *
	 * @since 4.3
	 *
	 * @param string $dir    the directory to scan
	 * @param string $parent the parent directory (if needed
	 *
	 * @return array
	 */
	private function get_files( $dir = '', $parent = null ) {

		if ( $parent === null ) {
			$parent = ITSEC_Lib::get_home_path();
		}

		$rel_dir      = trim( sanitize_text_field( $dir ) );
		$directory    = trim( trailingslashit( urldecode( trailingslashit( sanitize_text_field( $parent ) ) . $rel_dir ) ) );
		$dir_contents = array();

		if ( file_exists( $directory ) ) {

			$files = scandir( $directory );

			natcasesort( $files );

			if ( count( $files ) > 2 ) { /* The 2 accounts for . and .. */

				//two loops keep directories sorted before files

				// All dirs
				foreach ( $files as $file ) {

					if ( file_exists( $directory . $file ) && $file != '.' && $file != '..' && is_dir( $directory . $file ) ) {
						//echo $dir . ', ' . $directory . PHP_EOL;
						$dir_contents[$file] = $this->get_files( $file, $directory );
					}

				}

				// All files
				foreach ( $files as $file ) {

					if ( file_exists( $directory . $file ) && $file != '.' && $file != '..' && ! is_dir( $directory . $file ) ) {
						//echo $file . PHP_EOL;
						$dir_contents[] = $file;
					}

				}

			}

		}

		return $dir_contents;

	}

}
